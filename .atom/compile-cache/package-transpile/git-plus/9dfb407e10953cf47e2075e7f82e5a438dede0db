"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputViewContainer = void 0;
const atom_1 = require("atom");
const React = require("react");
const ReactDOM = require("react-dom");
const Root_1 = require("./Root");
class OutputViewContainer {
    constructor() {
        this.emitter = new atom_1.Emitter();
        this.element = document.createElement("div");
        this.element.classList.add("git-plus", "output");
        this.render();
        atom.workspace.open(this, { activatePane: false });
    }
    getURI() {
        return OutputViewContainer.URI;
    }
    getTitle() {
        return "Git+";
    }
    getDefaultLocation() {
        return "bottom";
    }
    serialize() {
        return {
            deserializer: "git-plus/output-view"
        };
    }
    async show() {
        const focusedPane = atom.workspace.getActivePane();
        await atom.workspace.open(this, { activatePane: true });
        if (focusedPane && !focusedPane.isDestroyed())
            focusedPane.activate();
    }
    hide() {
        atom.workspace.hide(this);
    }
    render() {
        ReactDOM.render(React.createElement(Root_1.Root, null), this.element);
    }
    toggle() {
        atom.workspace.toggle(this);
    }
    destroy() {
        ReactDOM.unmountComponentAtNode(this.element);
        this.element.remove();
        this.emitter.emit("did-destroy");
    }
    onDidDestroy(cb) {
        return this.emitter.on("did-destroy", cb);
    }
}
exports.OutputViewContainer = OutputViewContainer;
OutputViewContainer.URI = "git-plus://output-view";
//# sourceMappingURL=container.js.map