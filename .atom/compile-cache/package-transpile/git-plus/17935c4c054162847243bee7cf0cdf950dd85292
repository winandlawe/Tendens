'use strict';

var fs = require('fs-plus');
var git = require('../git');
var notifier = require('../notifier');
var ActivityLogger = require('../activity-logger').default;
var Repository = require('../repository').default;
var BranchListView = require('../views/branch-list-view');

module.exports = function (repo) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { remote: false };

  var args = options.remote ? ['branch', '-r', '--no-color'] : ['branch', '--no-color'];
  return git.cmd(args, { cwd: repo.getWorkingDirectory() }).then(function (data) {
    return new BranchListView(data, function (_ref) {
      var name = _ref.name;

      var args = options.remote ? ['checkout', name, '--track'] : ['checkout', name];
      var repoName = new Repository(repo).getName();
      git.cmd(args, { cwd: repo.getWorkingDirectory() }).then(function (output) {
        ActivityLogger.record({ repoName: repoName, message: 'checkout to ' + name, output: output });
        atom.workspace.getTextEditors().forEach(function (editor) {
          try {
            var path = editor.getPath();
            console.log('Git-plus: editor.getPath() returned \'' + path + '\'');
            if (path && path.toString) {
              fs.exists(path.toString(), function (exists) {
                if (!exists) editor.destroy();
              });
            }
          } catch (error) {
            notifier.addWarning('There was an error closing windows for non-existing files after the checkout. Please check the dev console.');
            console.info('Git-plus: please take a screenshot of what has been printed in the console and add it to the issue on github at https://github.com/akonwi/git-plus/issues/139', error);
          }
        });
        git.refresh(repo);
      }).catch(function (error) {
        ActivityLogger.record({
          repoName: repoName,
          message: 'checkout to ' + name,
          output: error,
          failed: true
        });
      });
    });
  });
};